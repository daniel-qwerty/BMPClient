//
// VoteAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



open class VoteAPI: APIBase {
    /**
     Cancel a vote
     
     - parameter post: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func cancelVote(post: Int32, completion: @escaping ((_ data: InlineResponse201?,_ error: Error?) -> Void)) {
        cancelVoteWithRequestBuilder(post: post).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     Cancel a vote
     - DELETE /posts/{post}/vote
     - API Key:
       - type: apiKey Authorization 
       - name: AuthToken
     - examples: [{contentType=application/json, example={
  "data" : {
    "totalVote" : ""
  },
  "message" : "aeiou"
}}]
     
     - parameter post: (path)  

     - returns: RequestBuilder<InlineResponse201> 
     */
    open class func cancelVoteWithRequestBuilder(post: Int32) -> RequestBuilder<InlineResponse201> {
        var path = "/posts/{post}/vote"
        path = path.replacingOccurrences(of: "{post}", with: "\(post)", options: .literal, range: nil)
        let URLString = BPMClientAPI.basePath + path

        let nillableParameters: [String:Any?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        //let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<InlineResponse201>.Type = BPMClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     Vote a post
     
     - parameter post: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func votePost(post: Int32, completion: @escaping ((_ data: InlineResponse201?,_ error: Error?) -> Void)) {
        votePostWithRequestBuilder(post: post).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     Vote a post
     - POST /posts/{post}/vote
     - API Key:
       - type: apiKey Authorization 
       - name: AuthToken
     - examples: [{contentType=application/json, example={
  "data" : {
    "totalVote" : ""
  },
  "message" : "aeiou"
}}]
     
     - parameter post: (path)  

     - returns: RequestBuilder<InlineResponse201> 
     */
    open class func votePostWithRequestBuilder(post: Int32) -> RequestBuilder<InlineResponse201> {
        var path = "/posts/{post}/vote"
        path = path.replacingOccurrences(of: "{post}", with: "\(post)", options: .literal, range: nil)
        let URLString = BPMClientAPI.basePath + path

        let nillableParameters: [String:Any?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        //let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<InlineResponse201>.Type = BPMClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
    }

}
